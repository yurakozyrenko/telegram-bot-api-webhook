version: '3.7'

services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    # depends_on:
    #   - postgres
    env_file:
      - .env
    ports:
      - '8080:8080'
    restart: always

  # webserver:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   restart: always
  #   volumes:
  #     - ./nginx/conf/:/etc/nginx/conf.d/:ro
  # - ./certbot/www:/var/www/certbot/:ro
  # - ./certbot/conf/:/etc/nginx/ssl/:ro

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   restart: unless-stopped
  #   command: 'http yourwebserver:80'
  #   volumes:
  #     - ./ngrok.yml:/etc/ngrok.yml
  #   ports:
  #     - 80:80
  #   expose:
  #     - '80'

  ngrok:
    image: wernight/ngrok
    volumes:
      - ./ngrok.yml:/home/ngrok/.ngrok2/ngrok.yml
    ports:
      - "4040:4040"
    command: ["ngrok", "http", "api:8080"]

  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certbot/conf/:/etc/letsencrypt/:rw

  # postgres:
  #   image: postgres:14-alpine
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ~/apps/postgres:/var/lib/postgresql/data
  #   env_file:
  #     - .env
  #   restart: always
